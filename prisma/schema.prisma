generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  email     String    @unique
  username  String
  imageUrl  String?
  imageId   String?
  password  String
  addedAt   DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  hotels    Hotel[]
  rooms     Room[]
  bookings  Booking[]
}

model Hotel {
  id                  String    @id @default(auto()) @map("_id") @db.ObjectId
  userId              String    @db.ObjectId
  title               String
  description         String
  imageUrl            String
  imageId             String
  country             String
  state               String?
  city                String?
  locationDescription String
  gym                 Boolean
  spa                 Boolean
  laundry             Boolean
  restaurant          Boolean
  shopping            Boolean
  freeParking         Boolean
  bikeRental          Boolean
  movieNights         Boolean
  swimmingPool        Boolean
  coffeeShop          Boolean
  addedAt             DateTime  @default(now())
  updatedAt           DateTime  @updatedAt
  rooms               Room[]
  booking             Booking[]
  user                User      @relation(fields: [userId], references: [id])
}

model Room {
  id             String    @id @default(auto()) @map("_id") @db.ObjectId
  title          String
  description    String
  bedCount       Int       @default(0)
  guestCount     Int?      @default(0)
  bathroomCount  Int       @default(0)
  kingBed        Int?      @default(0)
  queenBed       Int?      @default(0)
  imageId        String
  imageUrl       String
  breakFastPrice Int
  roomPrice      Int
  roomservice    Boolean   @default(false)
  tv             Boolean   @default(false)
  balcony        Boolean   @default(false)
  freeWifi       Boolean   @default(false)
  cityView       Boolean   @default(false)
  mountainView   Boolean   @default(false)
  airCondition   Boolean   @default(false)
  soundProofed   Boolean   @default(false)
  userId         String    @db.ObjectId
  hotelId        String    @db.ObjectId
  Hotel          Hotel     @relation(fields: [hotelId], references: [id])
  Booking        Booking[]
  user           User      @relation(fields: [userId], references: [id])
}

model Booking {
  id                String   @id @default(auto()) @map("_id") @db.ObjectId
  userName          String
  userEmail         String
  userId            String   @db.ObjectId
  roomId            String   @db.ObjectId
  hotelId           String   @db.ObjectId
  hotelOwnerId      String
  startDate         DateTime
  endDate           DateTime
  breakfastIncluded Boolean
  currency          String
  totalPrice        Int
  paymentStatus     Boolean  @default(false)
  paymentIntentId   String   @unique
  bookedAt          DateTime @default(now())
  updatedAt         DateTime @updatedAt
  Hotel             Hotel    @relation(fields: [hotelId], references: [id])
  Room              Room     @relation(fields: [roomId], references: [id])
  user              User     @relation(fields: [userId], references: [id])
}
